---
- name: Desinstalar Zabbix en Windows (limpieza completa + post-check)
  hosts: a_desinstalar_zabbix_windows
  gather_facts: false

  tasks:
    - name: Detener servicios Zabbix si existen
      ansible.windows.win_service:
        name: "{{ item }}"
        state: stopped
      loop:
        - "Zabbix Agent"
        - "Zabbix Agent 2"
      ignore_errors: true

    - name: Desinstalar Zabbix Agent con WMIC (si está)
      ansible.windows.win_shell: |
        wmic product where "name='Zabbix Agent'" call uninstall /nointeractive | Out-Null
        $LASTEXITCODE = 0
      changed_when: false
      failed_when: false

    - name: Desinstalar Zabbix Agent 2 con WMIC (si está)
      ansible.windows.win_shell: |
        wmic product where "name='Zabbix Agent 2'" call uninstall /nointeractive | Out-Null
        $LASTEXITCODE = 0
      changed_when: false
      failed_when: false

    - name: Eliminar carpeta C:\czabbix si existe
      ansible.windows.win_file:
        path: "C:\\czabbix"
        state: absent
      ignore_errors: true

    - name: "Buscar carpeta 'czabbix' en todo C"
      ansible.windows.win_shell: |
        Get-ChildItem -Path C:\ -Directory -Filter "czabbix" -Recurse -ErrorAction SilentlyContinue |
        Select-Object -ExpandProperty FullName
      register: czabbix_dirs
      changed_when: false
      failed_when: false

    - name: Eliminar carpetas 'czabbix' encontradas
      ansible.windows.win_file:
        path: "{{ item }}"
        state: absent
      loop: "{{ (czabbix_dirs.stdout_lines | default([])) | unique }}"
      when: (czabbix_dirs.stdout_lines | default([])) | length > 0
      ignore_errors: true

    - name: Eliminar servicio Zabbix Agent si quedó registrado
      ansible.windows.win_shell: |
        sc.exe delete "Zabbix Agent"
      register: del_service
      changed_when: "'SUCCESS' in (del_service.stdout | default(''))"
      failed_when: false

    # --- BLOQUE SNMP ---
    - name: Detener servicio SNMP
      win_service:
        name: SNMP
        state: stopped
        start_mode: disabled
      ignore_errors: yes

    - name: Desinstalar característica SNMP
      win_feature:
        name: SNMP
        state: absent
      ignore_errors: yes

    - name: Bloquear puerto SNMP (161/UDP) - método PowerShell (sin módulo)
  ansible.windows.win_shell: |
    $ruleName = "Bloquear SNMP 161 UDP"
    $rule = Get-NetFirewallRule -DisplayName $ruleName -ErrorAction SilentlyContinue
    if (-not $rule) {
      New-NetFirewallRule -DisplayName $ruleName -Direction Inbound -LocalPort 161 -Protocol UDP -Action Block | Out-Null
      "CREATED"
    } else {
      "EXISTS"
    }
  register: snmp_fw
  changed_when: (snmp_fw.stdout | trim) -eq "CREATED"
  failed_when: false


    - name: Eliminar carpetas relacionadas con SNMP
      win_file:
        path: "{{ item }}"
        state: absent
      loop:
        - "C:\\SNMP"
        - "C:\\Program Files\\SNMP"
        - "C:\\ProgramData\\SNMP"
      ignore_errors: yes

    - name: Forzar detención de procesos relacionados con SNMP
      win_shell: |
        Get-Process -Name *snmp* -ErrorAction SilentlyContinue | Stop-Process -Force
      ignore_errors: yes

    # --- POST-CHECK / EVIDENCIA ZABBIX ---
    - name: Validar que no existan paquetes 'Zabbix Agent'
      ansible.windows.win_shell: |
        $pkg = Get-Package | Where-Object { $_.Name -like "Zabbix Agent*" }
        if ($pkg) { "FOUND" } else { "NOT_FOUND" }
      register: zbx_pkg_check
      changed_when: false
      failed_when: false

    - name: Mostrar resultado final Zabbix (sin restos)
      ansible.builtin.debug:
        msg: "Zabbix desinstalado correctamente (sin paquetes, servicios ni carpetas detectadas)."
      when: (zbx_pkg_check.stdout | trim) == "NOT_FOUND"

    - name: Mostrar resultado final Zabbix (con restos detectados)
      ansible.builtin.debug:
        msg: "Se detectaron restos de paquetes de Zabbix; revisar manualmente."
      when: (zbx_pkg_check.stdout | trim) != "NOT_FOUND"

    # --- POST-CHECK / EVIDENCIA SNMP ---
    - name: Validar que no existan servicios/características SNMP
      ansible.windows.win_shell: |
        $svc = Get-Service -Name SNMP -ErrorAction SilentlyContinue
        $feature = Get-WindowsFeature -Name SNMP -ErrorAction SilentlyContinue
        if ($svc -or ($feature -and $feature.InstallState -eq "Installed")) { "FOUND" } else { "NOT_FOUND" }
      register: snmp_check
      changed_when: false
      failed_when: false

    - name: Mostrar resultado final SNMP (sin restos)
      ansible.builtin.debug:
        msg: "SNMP desinstalado correctamente (sin servicios ni características activas)."
      when: (snmp_check.stdout | trim) == "NOT_FOUND"

    - name: Mostrar resultado final SNMP (con restos detectados)
      ansible.builtin.debug:
        msg: "Se detectaron restos de SNMP; revisar manualmente."
      when: (snmp_check.stdout | trim) != "NOT_FOUND"
