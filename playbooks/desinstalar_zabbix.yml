---
- name: Desinstalar Zabbix en Windows (WMIC + limpieza de carpetas + post-check)
  hosts: a_desinstalar_zabbix_windows
  gather_facts: false

  tasks:
    - name: Detener servicios Zabbix si existen
      ansible.windows.win_service:
        name: "{{ item }}"
        state: stopped
      loop:
        - "Zabbix Agent"
        - "Zabbix Agent 2"
      ignore_errors: true

    - name: Desinstalar Zabbix Agent con WMIC (si está)
      ansible.windows.win_shell: |
        wmic product where "name='Zabbix Agent'" call uninstall /nointeractive | Out-Null
        $LASTEXITCODE = 0
      changed_when: false
      failed_when: false

    - name: Desinstalar Zabbix Agent 2 con WMIC (si está)
      ansible.windows.win_shell: |
        wmic product where "name='Zabbix Agent 2'" call uninstall /nointeractive | Out-Null
        $LASTEXITCODE = 0
      changed_when: false
      failed_when: false

    - name: Eliminar carpeta C:\czabbix si existe
      ansible.windows.win_file:
        path: "C:\\czabbix"
        state: absent
      ignore_errors: true

    - name: "Buscar carpeta 'czabbix' en todo C"
      ansible.windows.win_shell: |
        Get-ChildItem -Path C:\ -Directory -Filter "czabbix" -Recurse -ErrorAction SilentlyContinue |
        Select-Object -ExpandProperty FullName
      register: czabbix_dirs
      changed_when: false
      failed_when: false

    - name: Eliminar carpetas 'czabbix' encontradas
      ansible.windows.win_file:
        path: "{{ item }}"
        state: absent
      loop: "{{ (czabbix_dirs.stdout_lines | default([])) | unique }}"
      when: (czabbix_dirs.stdout_lines | default([])) | length > 0
      ignore_errors: true

    # --- POST-CHECK / EVIDENCIA ---
    - name: Validar que no existan paquetes 'Zabbix Agent'
      ansible.windows.win_shell: |
        $pkg = Get-Package | Where-Object { $_.Name -like "Zabbix Agent*" }
        if ($pkg) { "FOUND" } else { "NOT_FOUND" }
      register: zbx_pkg_check
      changed_when: false
      failed_when: false

    - name: Resultado final
      ansible.builtin.debug:
        msg: >-
          {{ 'Zabbix desinstalado correctamente (sin paquetes ni carpetas residuales).'
             if (zbx_pkg_check.stdout | trim) -eq 'NOT_FOUND'
             else 'Se detectaron restos de paquetes de Zabbix; revisar manualmente.' }}
