---
- name: Desinstalar Zabbix en Linux (con llave SSH desde Encuesta, multi-OS)
  hosts: a_desinstalar_zabbix_linux
  gather_facts: true     # aquí sí necesitamos facts para detectar OS
  become: true

  vars:
    usuario_ssh: "{{ usuario_ssh }}"
    puerto_ssh: "{{ puerto_ssh | default(22) }}"
    llave_ssh: "{{ llave_ssh }}"
    private_key_path: "/tmp/aap_key_{{ awx_job_id | default(ansible_date_time.epoch) }}.pem"

    ansible_user: "{{ usuario_ssh }}"
    ansible_port: "{{ puerto_ssh }}"
    ansible_ssh_private_key_file: "{{ private_key_path }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

  pre_tasks:
    - name: Validar variable 'llave_ssh'
      ansible.builtin.assert:
        that:
          - llave_ssh is defined
          - (llave_ssh | length) > 10
        fail_msg: "La variable 'llave_ssh' está vacía. Revisa Encuesta."

    - name: Crear llave temporal en el controlador
      ansible.builtin.copy:
        content: "{{ (llave_ssh | replace('\\r','') | replace('\\n','\n')) }}"
        dest: "{{ private_key_path }}"
        mode: '0600'
      run_once: true
      delegate_to: localhost

  tasks:
    # --- Ubuntu / Debian ---
    - name: Desinstalar Zabbix en Debian/Ubuntu
      ansible.builtin.apt:
        name:
          - zabbix-agent
          - zabbix-agent2
        state: absent
        purge: true
        update_cache: true
      when: ansible_os_family == "Debian"

    # --- RedHat / CentOS ---
    - name: Desinstalar Zabbix en RedHat/CentOS
      ansible.builtin.yum:
        name:
          - zabbix-agent
          - zabbix-agent2
        state: absent
      when: ansible_os_family == "RedHat"

    # --- SUSE ---
    - name: Desinstalar Zabbix en SUSE
      community.general.zypper:
        name:
          - zabbix-agent
          - zabbix-agent2
        state: absent
      when: ansible_os_family == "Suse"

    # --- Limpieza de restos ---
    - name: Eliminar archivos de Zabbix
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/zabbix
        - /var/log/zabbix
        - /var/lib/zabbix
      ignore_errors: true

    - name: Verificación post-desinstalación
      ansible.builtin.shell: |
        if command -v zabbix_agentd >/dev/null 2>&1 || pgrep -f 'zabbix[-_]agent' >/dev/null 2>&1; then
          echo "Zabbix AÚN está presente"; exit 1
        else
          echo "OK: Zabbix no encontrado"
        fi
      register: postcheck
      changed_when: false

  post_tasks:
    - name: Borrar llave temporal
      ansible.builtin.file:
        path: "{{ private_key_path }}"
        state: absent
      run_once: true
      delegate_to: localhost
